#
# $Id$
#

# Common section
## set archive(conf)    [file join $common(confdir) "archive.conf"];
## set archive(datadir) $common(archivedatadir);
## set archive(invdir)  $common(archiveinvdir);

# Per-filter parameters for the archiver
#
# The archiver is disabled by default. If it is enabled by setting the
# variable archive(<filter>,enable) to 1, then the other specific
# variables can be used to select what is or not archived.

#
# dafilter
#
# A non-zero setting of "<type>_enable" enables the archive for <type>.
# If the setting is 1, then a copy of all the data is saved
# permamently (it is not deleted by the hourly cleanup script) in the
# archive directory. A setting of 2 also enables the archive
# but it disables saving the data in the standard data dir. The <type>_regex
# variables can be used to select/omit the files of a given <type> that
# archived. The regexp is matched against the da subdir name; e.g.,
# surface, nwx/hpc/fronts, nexrad/nids/jua.
#
# Note that there is no provision for archiving grib (model forecast) files,
# since the motivation is to archive data-related files.
#
## set archive(da,datadir) [file join $archive(datadir) "digatmos"];
## set archive(da,subdirfmt) "%Y%m%d";
## set archive(da,file_namefext) ".tar";
##R set archive(da,sat_namefmt) {$rc(wmoid)_${ymd_hm}.gini.tar};
## set archive(da,sat_namefmt_tip) {$rc(wmoid)_${ymd_hm}.viirs.tar};
## set archive(da,sat_namefmt_glm) {$rc(wmoid)+$rc(nawips)_${ymd_hm}.glm.tar};
## set archive(da,sat_namefmt_goesr) {$rc(wmoid)_${ymd_hm}.goesr.tar};
## set archive(da,sat_namefmt_cdgt) {$rc(wmoid)$rc(nawips)_${ymd_hm}.tar};
## set archive(da,sat_namefmt_ixt) {$rc(wmoid)$rc(nawips)_${ymd_hm}.tar};
## set archive(da,sat_dirfmt) \
##     {[file join [string range $rc(wmoid) 0 2] $rc(wmoid) $rc(nawips)]};

## set archive(da,rad_namefmt) {${ymdh}.nids.tar};
## set archive(da,rad_dirfmt) {$rc(awips2)};
## set archive(da,rad2_namefmt) {${ymdh}.craft.tar};
## set archive(da,rad2_dirfmt) {$rc(station)};
## set archive(da,invdir) [file join $archive(invdir) "digatmos"];
## set archive(da,inv_subdirfmt) "%Y%m%d";
## set archive(da,inv_namefmt) "%H%M.inv";
#
## set archive(da,enable) 0;
## set archive(da,file_enable) 1;
## set archive(da,sat_enable) 1;
## set archive(da,rad_enable) 1;
## set archive(da,file_regex) {.*};
## set archive(da,sat_regex) {.*};
## set archive(da,rad_regex) {.*};

#
# metar
#
## set archive(metar,datadir) [file join $archive(datadir) "metar"];
## set archive(metar,subdirfmt) "%Y%m%d";
## set archive(metar,fext) ".metar";
#
## set archive(metar,daily_subdir) "daily";
## set archive(metar,hourly_subdir) "hourly";
#
## set archive(metar,enable) 0;
## set archive(metar,daily_enable) 1;
## set archive(metar,hourly_enable) 1;

#
# Read the local overrides
#
if {[info exists source_archive_conf_defined]} {
    return;
}
set source_archive_conf_defined 1;

set _confname "archive.conf"
foreach _d $common(localconfdirs) {
    set _localconfname ${_d}/${_confname}
    if {[file exists ${_localconfname}] == 1} {
        source ${_localconfname};
    }
}
unset -nocomplain _d;
unset -nocomplain _localconfname;
unset _confname;
