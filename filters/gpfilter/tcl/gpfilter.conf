#
# $Id$
#
# Sample configuration for the gempak filter. The commented values
# are the defaults. The filter will run without this file, but not
# without the rc file; it will be deactivated if the rc file is not found.
# The default location of this file is the directory "/usr/local/etc/nbsp".

# The main and the last rc file
#
## set gpfilter(rc)	[file join $common(confdir) "gpfilter.rc"];
## set gpfilter(prerc)	[file join $common(confdir) "gpfilterpre.rc"];
## set gpfilter(postrc)	[file join $common(confdir) "gpfilterpost.rc"];

# List of directories to look for additional conf and rc files
#
## set gpfilter(localconfdirs)  	$common(localconfdirs);

# Additional directory to look for rc files
#
## set gpfilter(rcdir)	[file join $common(rcdir) "gp"];

# Definitions for the satellite decoder
#
## set gpfilter(satdef)	[file join $common(confdir) "gpfilter-sat.def"];

# Inventory settings
#
## set gpfilter(invdir)	[file join $common(datainvdir) "gempak"];
## set gpfilter(radinvsubdir) "nexrad";
## set gpfilter(satinvsubdir) [file join "images" "sat"];
## set gpfilter(invformat)	$common(datainvformat);
## set gpfilter(rad_inv_enable) 1;
## set gpfilter(sat_inv_enable) 1;

# Work-crew configuration for dafilter-master
## set gpfilter(slave) [file join $common(libdir) "gpfilter"];
## set gpfilter(slave,types) [list "rad" "grib" "default"];
## set gpfilter(slave,rad,ure) {_sdus[235678]} ;
## set gpfilter(slave,grib,ure) {\+grib};
## set gpfilter(slave,default,ure) {.*};

#
# Decoders configuration
#

# The directory that contains the gempak decoders
#
## set gpfilter(dec_bindir)		$gempak(bindir);

# The directory that contains "data/gempak" (i.e., in ldm it is /home/ldm)
# and the data directory itself. The decoders assume a
# "cd $gpfilter(dec_rootdir)", which is done in the function that invokes them.
# If "dec_datadir" is modified here, then it must be modified also in
# the Gemenviron files (or the gempak<shell>.conf files of gpak) and in
# the gempak.env file.
#
## set gpfilter(dec_rootdir)	"/var/noaaport";
## set gpfilter(dec_datadir)	[file join $gpfilter(dec_rootdir) \
				"data" "gempak"];
# The log directory for decoders
#
## set gpfilter(dec_logdir)	$filterserrlib(logdir);

# These variables are needed by the gempak decoders
#
## set gpfilter(dec_GEMPAK)	[file join $gempak(homedir) "gempak"];
## set gpfilter(dec_GEMTBL)	[file join $gempak(homedir) "gempak" "tables"];

# Argument to -t (timeout in seconds) option
#
## set gpfilter(dec_timeout) 60;   

# By default all decoders are enabled unless they are explitly disabled
#
## set gpfilter(decoder_enable) 1;
## set gpfilter(decoder_regex) {.*};

# Individual decoders can be disabled by setting the regex, which is matched
# against the decoder name. For example,
#
# set gpfilter(decoder_regex) {dcwarn|dcwatch};
#
# will enable only dcwarn and dcwatch, while 
#
# set gpfilter(decoder_regex) {!dcgrib};
#
# will enable all except dcgrib.
#
# For the other data types,
#
## set gpfilter(rad_enable) 1;
## set gpfilter(rad_regex)  {.*};
## set gpfilter(sat_enable) 1;
## set gpfilter(sat_regex)  {.*};
## set gpfilter(file_enable) 1;
## set gpfilter(file_regex)  {.*};
#
# The regex is matched against the subdirectory name where the files are saved;
# that is
# 	nwx/spc/stahry
#	nexrad/NIDS/JUA/N0R
#	images/sat/PR-NATIONAL/8km/IR
#
# and so on. A setting such as
#
# set gpfilters(decoder_enable) 0
# set gpfilter(sat_regex) {sat/PR-NATIONAL}
# set gpfilter(file_regex) {nwx/}
# set gpfilter(rad_regex)  {NIDS/(JUA|LIX|FWD)}
#
# will disable all the decoders, and enable the files only the files
# saved under the "nwx" subdirectories, as well the PR-NATIONAL gini files
# and the radar files from JUA, LIX, and FWD.

# Schedule configuration
## set gpfilter(scheduler_enable) 0;
## set gpfilter(schedule) [file join $common(confdir) "gpfilter-schedule.rc"];
## set gpfilter(schedule_run_period) "minutely";

#
# Read the local overrides
#
if {[info exists source_gpfilter_conf_defined]} {
    return;
}
set source_gpfilter_conf_defined 1;

set _confname "gpfilter.conf";
foreach _d $gpfilter(localconfdirs) {
    set _localconfname ${_d}/${_confname}
    if {[file exists ${_localconfname}] == 1} {
        source ${_localconfname};
    }
}
unset -nocomplain _d;
unset -nocomplain _localconfname;
unset _confname;
